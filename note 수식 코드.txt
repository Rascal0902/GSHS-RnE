#include <stdio.h>
#include <math.h>
#define N 100
#define alpha 1

struct vector
{
   double x, y, z;
   vector operator+(vector v) { return {x+v.x, y+v.y, z+v.z}; }
   vector operator-(vector v) { return {x-v.x, y-v.y, z-v.z}; }
   vector operator*(double c) { return {x*c, y*c, z*c}; }
   vector operator/(double c) { return {x/c, y/c, z/c}; }
};

vector p[N], b[3][3];
double u[N], v[N];

double norm(vector v) { return sqrt(v.x*v.x+v.y*v.y+v.z*v.z); }

double B(int i, double t)
{
   if(i==0) return (1-t)*(1-t);
   if(i==1) return 2*t*(1-t);
   if(i==2) return t*t;
}

double Bt(int i, double t)
{
   if(i==0) return 2*(t-1);
   if(i==1) return 2*(1-2*t);
   if(i==2) return 2*t;
}

vector BS(double u, double v)
{
   vector BS={0, 0, 0};
   for(int i=0; i<3; i++) for(int j=0; j<3; j++) BS=BS+b[i][j]*B(i, u)*B(j, v);
   return BS;
}

vector BSu(double u, double v)
{
   vector BSu={0, 0, 0};
   for(int i=0; i<3; i++) for(int j=0; j<3; j++) BSu=BSu+b[i][j]*Bt(i, u)*B(j, v);
   return BSu;
}

vector BSv(double u, double v)
{
   vector BSv={0, 0, 0};
   for(int i=0; i<3; i++) for(int j=0; j<3; j++) BSv=BSv+b[i][j]*B(i, u)*Bt(j, v);
   return BSv;
}

void Find_b11()
{
   vector r={0, 0, 0}; double s=0;
   for(int i=0; i<N; i++)
   {
      vector y=BS(u[i], v[i])-b[1][1]*B(1, u[i])*B(1, v[i]);
      r=r+(p[i]-y)*B(1, u[i])*B(1, v[i]);
      s+=B(1, u[i])*B(1, u[i])*B(1, v[i])*B(1, v[i]);
   }
   b[1][1]=r/s;
}

void Rearrange()
{
   for(int i=0; i<N; i++)
   {
      double ut=u[i]-alpha*(BSu(u[i], v[i]).x*(BS(u[i], v[i])-p[i]).x+BSu(u[i], v[i]).y*(BS(u[i], v[i])-p[i]).y+BSu(u[i], v[i]).z*(BS(u[i], v[i])-p[i]).z)/norm(BSu(u[i], v[i]))/norm(BSu(u[i], v[i]));
      double vt=v[i]-alpha*(BSv(u[i], v[i]).x*(BS(u[i], v[i])-p[i]).x+BSv(u[i], v[i]).y*(BS(u[i], v[i])-p[i]).y+BSv(u[i], v[i]).z*(BS(u[i], v[i])-p[i]).z)/norm(BSv(u[i], v[i]))/norm(BSv(u[i], v[i]));
      u[i]=ut, v[i]=vt;
   }
}

int main()
{
   for(int i=0; i<10; i++) for(int j=0; j<10; j++) 
   {
      p[10*i+j]={2*i-9, 2*j-9, sqrt(200-(2*i-9)*(2*i-9)-(2*j-9)*(2*j-9))};
      u[10*i+j]=0.5, v[10*i+j]=0.5;
   }
   b[0][0]={-10, -10, 0}, b[2][0]={10, -10, 0}, b[0][2]={-10, 10, 0}, b[2][2]={10, 10, 0};
   b[1][0]={0, -10, 20}, b[0][1]={-10, 0, 20}, b[2][1]={10, 0, 20}, b[1][2]={0, 10, 20};

   for(int i=0; i<20; i++)
   {
      Find_b11(); Rearrange();
      printf("%.4lf %.4lf %.4lf\n", b[1][1].x, b[1][1].y, b[1][1].z);
   } printf("\n");
   
   /* ========== ========== gnuplot ========== ==========
   printf("\n");
   for(double i=0; i<1.01; i+=0.05) for(double j=0; j<1.01; j+=0.05)
      printf("%.4lf %.4lf %.4lf\n", BS(i, j).x, BS(i, j).y, BS(i, j).z);
   ========== ========== ========== ========== ========== */
}